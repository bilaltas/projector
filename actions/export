#!/bin/bash




# Check if the folder not exists
if [[ ! -d "$PROJECTDIR" ]]; then

	echo -e "${RED}Project doesn't exist.${RESET}"
	exit

fi




# Check if installed
if [[ $INSTALLED != "yes" ]]; then

	echo -e "${RED}Project is not installed.${RESET}"
	exit

fi




echo "EXPORTING STARTED"




# Importable option
if [[ $OPTION1 == --importable ]] || [[ $OPTION2 == --importable ]]; then

	targetdomain=$DOMAIN
	targetprotocol="http"

fi




# Ask for the target domain
while [[ -z "$targetdomain" ]]; do

	read -ep "Target domain (www.domainname.com): " targetdomain

done




# Ask for the target protocol
while [[ $targetprotocol != http ]] && [[ $targetprotocol != https ]]; do

	read -ep "Target protocol (http | https): " targetprotocol

done




## CREATE FOLDERS:
# Remove existing "export" folder
sudo rm -rf "$PROJECTDIR/export"


# Create the export folder
sudo mkdir -p "$PROJECTDIR/export"


# If importable
if [[ $OPTION1 == --importable ]] || [[ $OPTION2 == --importable ]]; then

	sudo mkdir -p "$PROJECTDIR/export/import"

fi


# Permission fix on 'export' folder
file_permission_update "$PROJECTDIR/export"




## FOLDER WORKS:
# Copy the wp-content folder
printf "Copying the 'wp-content' folder ..."
sudo cp -rf "$PROJECTDIR/wp/wp-content" "$PROJECTDIR/export/wp-content"
echo -e " ${GREEN}done${RESET}"


# Delete 'node_modules' folder if exists
printf "Removing the 'node_modules' folder ..."
sudo rm -rf "$PROJECTDIR/export/wp-content/themes/$ACTIVE_THEME/node_modules"
echo -e " ${GREEN}done${RESET}"


# Delete 'package-lock.json' file if exists
printf "Removing the 'package-lock.json' file ..."
sudo rm -rf "$PROJECTDIR/export/wp-content/themes/$ACTIVE_THEME/package-lock.json"
echo -e " ${GREEN}done${RESET}"


# Importable option
if [[ $OPTION1 == --importable ]] || [[ $OPTION2 == --importable ]]; then

	printf "Moving the 'wp-content' folder ..."
	sudo mv "$PROJECTDIR/export/wp-content" "$PROJECTDIR/export/import/wp-content"
	echo -e " ${GREEN}done${RESET}"

# else


	# # Zip the folder
	# echo -e "Zipping the wp-content folder..."
	# (
	# 	cd "$PROJECTDIR/export"
	# 	zip -r -X "wp-content.zip" "wp-content"
	# )
	# echo -e "'wp-content.zip' theme file created ... ${GREEN}done${RESET}"


	# # Remove the folder
	# printf "Removing the 'wp-content' folder ..."
	# sudo rm -rf "$PROJECTDIR/export/wp-content"
	# echo -e " ${GREEN}done${RESET}"


fi




## DB WORKS:
# Backup the current DB
echo "Backing up the DB ..."
wp_no_extra db export "tmp_wordpress_data.sql"


# Check the initial backup file
if [[ ! -f "$PROJECTDIR/wp/tmp_wordpress_data.sql" ]]; then

	echo -e "${RED}DB backup not found.${RESET}"
	exit

fi



# Importable option
if [[ $OPTION1 == --importable ]] || [[ $OPTION2 == --importable ]]; then

	printf "Moving the DB file ..."
	sudo mv "$PROJECTDIR/wp/tmp_wordpress_data.sql" "$PROJECTDIR/export/import/db.sql"
	echo -e " ${GREEN}done${RESET}"

else


	# Do the replacements
	echo -e "Replacement 1 starting... '${BLUE}http://${DOMAIN}${RESET}' -> '${BLUE}${targetprotocol}://${targetdomain}${RESET}'"
	wp_no_extra search-replace "http://${DOMAIN}" "${targetprotocol}://${targetdomain}" --recurse-objects --report-changed-only --all-tables
	echo -e "Replacement 1 ... ${GREEN}done${RESET}"

	echo -e "Replacement 2 starting... '${BLUE}${DOMAIN}${RESET}' -> '${BLUE}${targetdomain}${RESET}'"
	wp_no_extra search-replace "${DOMAIN}" "${targetdomain}" --recurse-objects --report-changed-only --all-tables
	echo -e "Replacement 2 ... ${GREEN}done${RESET}"


	# Backup after replacements
	wp_no_extra db export "live.sql"


	# Revert the DB
	wp_no_extra db import "tmp_wordpress_data.sql"
	sudo rm -rf "$PROJECTDIR/wp/tmp_wordpress_data.sql"


	# Check the replaced backup file
	if [[ ! -f "$PROJECTDIR/wp/live.sql" ]]; then

		echo -e "${RED}CHANGED SQL FILE NOT FOUND.${RESET}"
		exit

	fi


	# Move the SQL file
	printf "Moving the DB file ..."
	sudo mv "$PROJECTDIR/wp/live.sql" "$PROJECTDIR/export/live.sql"
	echo -e " ${GREEN}done${RESET}"


fi




# Permission fix on 'export' folder
file_permission_update "$PROJECTDIR/export"




echo -e "${GREEN}EXPORTING COMPLETE${RESET}"